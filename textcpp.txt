короче, сечас на примере покажу, в чем загвостка с дополнительным
нет, сначала еще раз с прямым
положим, у нас есть два числа, не выходящие за границу нашего диапазона (у меня 16 битов, то есть -32768__32767)
я ввожу эти числа (разности у меня пока нет, считается только сумма)
32735
32736
0111111111011111   //в двоичном коде
0111111111100000   //в двоичном
SUM
Invalid result of sum! Out of range  //мой вывод
1111111110111111   //то, что посчиталось в моей функции суммы (хотя длина не увеличилась, так же 16 бит, первая цифра стала 1, а это уже больше 32767)
короче, выход за границу 
то есть нельзя, чтобы результат был из 16 цифр, а первые цифры каждого введенного числа были нулями, и первая цифра резултата была 1- тогда это выход за границу (то есть мы складываем два числа прямого кода (тк 0 в начале), а в новом числе получаем на первом месте 1, а такого быть не может, тк 1 на первом месте только у дополнительного кода)

это про прямой + прямой (то есть сумма положительных)
еще один пример, где сумма норм
20000
12000
0100111000100000 //20000
0010111011100000 //12000
SUM
0111110100000000 //32000- не выходит за границу->все норм
0111110100000000
-------------------------------------------------------------------------------------------------------
Следующий случай - дополнительный + дополнительный (отрицательное+отрицательное)
Тут штука интересная
-1
-3
1111111111111111 //-1
1111111111111101  //-3
SUM
1111111111111100  //то, что я выпишу в ответ
11111111111111100  //то, что у меня получилось в функции
^17й знак

если поразрядно сделать сумму этих двух чисел, то получится 17й разряд- но мы должны его отбросить, и тогда в ответе будет -4 -все нормально
ну, таковы правила сложения двух дополнительных кодов, сама знаешь)

Но есть случай, когда получится 17 знаков, но случится выход за границу и ответ будет неправильным
у меня и есть неправильный, надо переделывать, прога должна говорить, что случился выход за границу
-32000
-5000
1000001100000000
1110110001111000
SUM
0110111101111000- это то, что выведется, но оно неправильно
10110111101111000- фактический ответ -37000, но он вышел за границу
наверно, надо сделать проверку, что бы при таком случае в результате не было на втором месте нуля- ели он есть, значит выход за границу 
10110111101111000
 ^этого нуля быть не должно, с ним в дополнительном коде ушло за -32738 в меньшую сторону -  -37000
------------------------------------------------------------------------------------------------
положительное+отрицательное число (прямой+обратынй)
-3240
5640
1111001101011000
0001011000001000
SUM
0000100101100000
10000100101100000- тут 17 знаков, первый -1, а второй 0, но так как у нас отрицательное число -3240 не выходи за границу (-32738), то у нас и сумма этого числа и любого неотрицательного не выйдет за грацицу снизу, значит, мы можем отбросить первую единицу, и у нас получится просто прямой код
 0000100101100000
10000100101100000
^отбрасываем

другой пример
3000
-6000
0000101110111000
1110100010010000
SUM
1111010001001000
1111010001001000
тут все норм, при подсчете суммы 17 знака не получилось

вроде, все с этим


